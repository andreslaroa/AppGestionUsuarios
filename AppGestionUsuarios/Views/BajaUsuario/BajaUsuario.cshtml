@{
    ViewBag.Title = "Baja Usuario";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            background: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
        }

        select, input[type="text"], button {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #f9f9f9;
        }

        button {
            background-color: #dc3545;
            color: white;
            border: none;
            cursor: pointer;
        }

        button:hover {
            background-color: #c82333;
        }

        .button-group {
            display: flex;
            justify-content: center;
        }

        .button-group button {
            margin-top: 10px;
            padding: 12px 20px;
        }

        #message {
            margin-top: 20px;
            font-weight: bold;
        }

        #detailsList {
            margin-top: 10px;
            padding-left: 20px;
        }

        .checkbox-group {
            margin-bottom: 15px;
        }

        .checkbox-group label {
            font-weight: normal;
            margin-bottom: 5px;
            display: flex;
            align-items: center;
        }

        .checkbox-group input[type="checkbox"] {
            margin-right: 10px;
            width: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>@ViewBag.Title</h1>

        <!-- Lista de usuarios -->
        <label for="userDropdown">Seleccionar Usuario:</label>
        <select id="userDropdown">
            <option value="">Seleccione un usuario</option>
            @foreach (var usuario in ViewBag.Usuarios as List<string>)
            {
                    <option value="@usuario">@usuario</option>
            }
        </select>

        <!-- Botón y campo de texto para usuario seleccionado -->
        <button type="button" onclick="selectUser()">Seleccionar Usuario</button>

        <label for="selectedUser">Usuario Seleccionado:</label>
        <input type="text" id="selectedUser" readonly />

        <!-- Checkboxes para acciones adicionales -->
        <div class="checkbox-group">
            <label>Acciones adicionales para la baja:</label>
            @foreach (var kvp in ViewBag.AdditionalActions as Dictionary<string, string>)
            {
                <label>
                    <input type="checkbox"
                           name="additionalActions"
                           value="@kvp.Key" />
                    @kvp.Value
                </label>
            }
        </div>

        <!-- Botón para baja usuario -->
        <div class="button-group">
            <button type="button" onclick="bajaUsuario()">Baja Usuario</button>
        </div>

        <!-- Área para mostrar mensajes -->
        <div id="message"></div>
        <ul id="detailsList"></ul>
    </div>

    <script>
        function selectUser() {
            const dropdown = document.getElementById('userDropdown');
            const selectedUser = dropdown.value;

            if (!selectedUser) {
                alert('Seleccione un usuario de la lista.');
                return;
            }

            document.getElementById('selectedUser').value = selectedUser;
        }

        async function bajaUsuario() {
            const username = document.getElementById('selectedUser').value;

            if (!username) {
                alert('Seleccione y confirme un usuario antes de eliminarlo.');
                return;
            }

            // Recolectar las acciones seleccionadas
            const checkboxes = document.querySelectorAll('input[name="additionalActions"]:checked');
            const selectedActions = Array.from(checkboxes).map(checkbox => checkbox.value);

            if (!confirm(`¿Está seguro de que desea dar de baja al usuario ${username}? Esta acción no se puede deshacer.`)) {
                return;
            }

            try {
                const response = await fetch('/BajaUsuario/BajaUsuario', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username: username, selectedActions: selectedActions })
                });

                // Verificar si la respuesta es exitosa
                if (!response.ok) {
                    const errorText = await response.text();
                    console.error('Respuesta del servidor:', errorText);
                    throw new Error(`Error del servidor: ${response.status} ${response.statusText}. Detalles: ${errorText}`);
                }

                // Intentar parsear la respuesta como JSON
                let data;
                try {
                    data = await response.json();
                } catch (jsonError) {
                    console.error('Error al parsear la respuesta JSON:', jsonError);
                    throw new Error('La respuesta del servidor no es un JSON válido. Revise los logs del servidor para más detalles.');
                }

                // Mostrar el mensaje principal
                const messageDiv = document.getElementById('message');
                messageDiv.textContent = data.success ? 'Usuario dado de baja exitosamente.' : 'Error al dar de baja al usuario.';

                // Mostrar los detalles del proceso
                const detailsList = document.getElementById('detailsList');
                detailsList.innerHTML = '';
                const messages = data.messages.split('\n');
                messages.forEach(msg => {
                    if (msg) {
                        const li = document.createElement('li');
                        li.style.color = msg.startsWith('Error') ? 'red' : 'green';
                        li.textContent = msg;
                        detailsList.appendChild(li);
                    }
                });

                if (data.success) {
                    setTimeout(() => location.reload(), 3000); // Refrescar después de 3 segundos
                }
            } catch (error) {
                console.error('Error al dar de baja al usuario:', error);
                const messageDiv = document.getElementById('message');
                messageDiv.textContent = `Ocurrió un error al dar de baja al usuario: ${error.message}`;
                const detailsList = document.getElementById('detailsList');
                detailsList.innerHTML = '';
                const li = document.createElement('li');
                li.style.color = 'red';
                li.textContent = error.message;
                detailsList.appendChild(li);
            }
        }
    </script>
</body>
</html>