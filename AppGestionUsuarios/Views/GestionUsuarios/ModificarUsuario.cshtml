<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modificar Usuario</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 20px;
        }

        form {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 800px;
            margin: auto;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        select, input, button {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }

            button:hover {
                background-color: #0056b3;
            }

        ul {
            list-style: none;
            padding: 0;
            background-color: #f9f9f9;
        }

            ul li {
                display: flex;
                justify-content: space-between;
                padding: 5px;
                margin-bottom: 5px;
                background-color: #e9ecef;
                border-radius: 4px;
            }

                ul li button {
                    background-color: #dc3545;
                    color: white;
                    border: none;
                    cursor: pointer;
                }

                    ul li button:hover {
                        background-color: #c82333;
                    }
    </style>
</head>
<body>
    <form id="modifyUserForm">
        <!-- Selección de Usuario -->
        <label for="userDropdown">Seleccionar Usuario:</label>
        <select id="userDropdown">
            <option value="">Seleccione un usuario</option>
            @foreach (var user in ViewBag.Users as List<string>)
            {
                <option value="@user">@user</option>
            }
        </select>
        <button type="button" onclick="selectUser()">Seleccionar Usuario</button>

        <label for="selectedUser">Usuario Seleccionado:</label>
        <input type="text" id="selectedUser" readonly />

        <!-- Gestión de Grupos -->
        <h3>Grupos del Usuario</h3>
        <ul id="groupList"></ul>

        <label for="availableGroupsDropdown">Añadir a un Grupo:</label>
        <select id="availableGroupsDropdown">
            <option value="">Seleccione un grupo para añadir</option>
            @foreach (var group in ViewBag.GruposAD as List<string>)
            {
                <option value="@group">@group</option>
            }
        </select>
        <button type="button" onclick="addUserToGroup()">Añadir Grupo</button>

        <!-- Gestión de OUs -->
        <h3>Cambiar OU y Departamento</h3>

        <label for="ouPrincipal">Nueva OU Principal:</label>
        <select id="ouPrincipal" onchange="fetchOUSecundarias(); fetchDepartamentos();">
            <option value="">Seleccione una OU Principal</option>
            @foreach (var ou in ViewBag.OUPrincipales as List<string>)
            {
                <option value="@ou">@ou</option>
            }
        </select>

        <label for="ouSecundaria">Nueva OU Secundaria:</label>
        <select id="ouSecundaria">
            <option value="">Seleccione una OU Secundaria</option>
        </select>

        <label for="departamento">Nuevo Departamento:</label>
        <select id="departamento">
            <option value="">Seleccione un departamento</option>
        </select>

        <button type="button" onclick="modifyUserOU()">Guardar Cambios de OU</button>
    </form>

    <script>
        // Seleccionar Usuario
        function selectUser() {
            const dropdown = document.getElementById("userDropdown");
            document.getElementById("selectedUser").value = dropdown.value;
            fetchUserGroups();
        }

        // Obtener Grupos del Usuario
        async function fetchUserGroups() {
            const username = document.getElementById("selectedUser").value;
            if (!username) return;

            const response = await fetch('/GestionUsuarios/GetUserGroups', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username })
            });

            const data = await response.json();
            const groupList = document.getElementById("groupList");
            groupList.innerHTML = "";

            if (data.success) {
                data.groups.forEach(group => {
                    const li = document.createElement("li");
                    li.textContent = group;

                    const removeBtn = document.createElement("button");
                    removeBtn.textContent = "Eliminar";
                    removeBtn.onclick = (e) => removeUserFromGroup(e, group); // Pasar el evento y el grupo
                    li.appendChild(removeBtn);

                    groupList.appendChild(li);
                });
            } else {
                alert(data.message);
            }
        }

        // Añadir Grupo
        async function addUserToGroup() {
            const group = document.getElementById("availableGroupsDropdown").value;
            const username = document.getElementById("selectedUser").value;

            if (!group || !username) {
                alert("Seleccione un usuario y un grupo para añadir.");
                return;
            }

            try {
                const response = await fetch('/GestionUsuarios/ModifyUserGroup', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, group, action: 'add' })
                });

                const data = await response.json();

                if (data.success) {
                    alert(data.message);
                    fetchUserGroups(); // Refrescar la lista de grupos sin recargar la página
                } else {
                    alert(data.message);
                }
            } catch (error) {
                console.error("Error al añadir grupo al usuario:", error);
                alert("Ocurrió un error al añadir el grupo al usuario.");
            }
        }

        // Eliminar Grupo
        async function removeUserFromGroup(event, group) {
            event.preventDefault(); // Prevenir recarga de la página

            const username = document.getElementById("selectedUser").value;

            if (!confirm(`¿Está seguro de que desea eliminar al usuario del grupo ${group}?`)) {
                return;
            }

            try {
                const response = await fetch('/GestionUsuarios/ModifyUserGroup', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, group, action: 'remove' })
                });

                const data = await response.json();

                if (data.success) {
                    alert(data.message);
                    fetchUserGroups(); // Refrescar la lista de grupos sin recargar la página
                } else {
                    alert(data.message);
                }
            } catch (error) {
                console.error("Error al eliminar grupo del usuario:", error);
                alert("Ocurrió un error al eliminar el grupo del usuario.");
            }
        }

        // Cargar OUs Secundarias
        function fetchOUSecundarias() {
            const ouPrincipal = document.getElementById('ouPrincipal').value;
            const ouSecundaria = document.getElementById('ouSecundaria');
            ouSecundaria.innerHTML = '<option value="">Seleccione una OU Secundaria</option>';

            if (ouPrincipal) {
                fetch('/GestionUsuarios/GetOUSecundarias', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ ouPrincipal })
                })
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(ou => {
                            const option = document.createElement('option');
                            option.value = ou;
                            option.textContent = ou;
                            ouSecundaria.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Error al obtener las OUs secundarias:', error));
            }
        }

        // Cargar Departamentos
        function fetchDepartamentos() {
            const ouPrincipal = document.getElementById('ouPrincipal').value;
            const departamento = document.getElementById('departamento');
            departamento.innerHTML = '<option value="">Seleccione un departamento</option>';

            if (ouPrincipal) {
                fetch('/GestionUsuarios/GetDepartamentos', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ ouPrincipal })
                })
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(dep => {
                            const option = document.createElement('option');
                            option.value = dep;
                            option.textContent = dep;
                            departamento.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Error al obtener los departamentos:', error));
            }
        }

        // Modificar OU del Usuario
        async function modifyUserOU() {
            const username = document.getElementById("selectedUser").value;
            const ouPrincipal = document.getElementById("ouPrincipal").value;
            const ouSecundaria = document.getElementById("ouSecundaria").value;
            const departamento = document.getElementById("departamento").value;

            if (!username || !ouPrincipal || !ouSecundaria || !departamento) {
                alert("Por favor, complete todos los campos de OU y Departamento.");
                return;
            }

            try {
                const response = await fetch('/GestionUsuarios/ModifyUserOU', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        username,
                        ouPrincipal,
                        ouSecundaria,
                        departamento
                    })
                });

                const data = await response.json();

                if (data.success) {
                    alert(data.message);
                } else {
                    alert(data.message);
                }
            } catch (error) {
                console.error("Error al modificar OU del usuario:", error);
                alert("Ocurrió un error al modificar la OU del usuario.");
            }
        }
    </script>
</body>
</html>
